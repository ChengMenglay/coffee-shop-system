// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   ="../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  name String
  password String
  phone String?
  roleId String
  role Role @relation(fields:[roleId], references: [id])
  createdAt DateTime @default(now())
  orders Order[]
}

model Role{
  id String @id @default(cuid())
  name String
  permissions Permission[] @relation("RolePermissions")
  users User[]
}

model Permission{
  id String @id @default(cuid())
  name String
  path String
  roles Role[] @relation("RolePermissions")
}

model Category{
  id String @id @default(cuid())
  name String
  products Product[]
  createdAt DateTime @default(now())
}

model Product{
  id String @id @default(cuid())
  name String
  price Decimal 
  image String
  description String
  categoryId String
  status Boolean @default(true)
  category Category @relation(fields: [categoryId], references: [id])
  createdAt DateTime @default(now())
  orderItems OrderItem[]
}

model Order{
  id String @id @default(cuid())
  userId String
  user User @relation(fields:[userId], references: [id])
  orderStatus String  @default("Pending")
  paymentStatus Boolean @default(false)
  paymentMethod String @default("Cash")
  createdAt DateTime @default(now())
  orderItems OrderItem[]
}

model OrderItem{
  id String @id @default(cuid())
  orderId String
  order Order @relation(fields:[orderId], references: [id])
  productId String
  product Product @relation(fields:[productId], references: [id])
  quantity Int @default(1)
  price Decimal
  size String
  sugar String
  note String?
}

model Ingredient{
  id String @id @default(cuid())
  name String
  stock Int @default(0)
  unit String
  lowStockThreshold Int 
  createdAt DateTime @default(now())
  ingredientStocks IngredientStock[]
  Purchases Purchase[]
}

model IngredientStock{
  id String @id @default(cuid())
  ingredientId String
  ingredient Ingredient @relation(fields:[ingredientId], references: [id])
  quantity Int
  status String @default("Use")
  note String?
  createdAt DateTime @default(now())
}

model Purchase{
  id String @id @default(cuid())
  ingredientId String
  ingredient Ingredient @relation(fields:[ingredientId], references: [id])
  quantity Int
  price Decimal
  supplier String
  createdAt DateTime @default(now())
}